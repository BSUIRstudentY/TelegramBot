import telebot
from telebot import types

bot = telebot.TeleBot('7818502719:AAEpJ3gL-9NrzvJosFWyvKEd2xUuH1Xg-9c')


bucket_map = {}  # –°–ª–æ–≤–∞—Ä—å –∫–æ—Ä–∑–∏–Ω—ã {chat_id: {product_id: quantity}}
accept_map = {}
ADMIN = [1795108376, 5342639460]

@bot.message_handler(commands=['start'])
def start(message):


    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ö–∞—Ç–∞–ª–æ–≥üôà")
    btn3 = types.KeyboardButton("–ö–æ—Ä–∑–∏–Ω–∞üõí")
    markup.add(btn1, btn3)
    bot.send_message(message.chat.id, f"üíØ –Ø –ë–û–¢ –ø–æ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –æ—Ç QRsharmstudio, –≤—ã–±–µ—Ä–∞–π –¥–µ–π—Å—Ç–≤–∏–µ üíØ ", reply_markup=markup)



@bot.message_handler(content_types=['text'])
def func(message):

    if message.text == "–ö–∞—Ç–∞–ª–æ–≥üôà":
        for i in range(1, 4):
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton("‚ùå –ù–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ", callback_data='delete_photo')
            btn2 = types.InlineKeyboardButton(f"–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É ‚úÖ", callback_data=f'button_clicked_{i}')
            markup.add(btn1, btn2)

            with open(f"{i}.jpeg", "rb") as photo:
                bot.send_photo(message.chat.id, photo, caption=f'‚úÖ –¶–µ–Ω–∞ 7 BYN ‚úÖ ', reply_markup=markup)

    elif message.text == '–ö–æ—Ä–∑–∏–Ω–∞üõí':
        username = message.from_user.username
        user_link = 'https://t.me/'

        if(username == None):
            username = message.chat.id
            user_link = f"https://web.telegram.org/k/#{username}"
        else:
            user_link+= username



        summ = 0
        if user_link in bucket_map:
            for product_id, quantity in bucket_map[user_link].items():
                with open(f"{product_id}.jpeg", "rb") as photo:
                    bot.send_document(message.chat.id, photo, caption=f'–¶–µ–Ω–∞ 7 BYN, –≤ –∑–∞–∫–∞–∑–µ —É–∫–∞–∑–∞–Ω–æ {quantity} —à—Ç.')
                summ += 7 * quantity

            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton("‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è", callback_data='cancel')
            btn2 = types.InlineKeyboardButton(f"–û—Ñ–æ—Ä–º–∏—Ç—å ‚úÖ", callback_data=f'accept')
            markup.add(btn1, btn2)
            bot.send_message(message.chat.id, f"üíØ –ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞ üü∞ {summ} BYN üí≥", reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ ‚õî')
    elif message.text == 'BUCKET_DATABASE':
        markup = types.InlineKeyboardMarkup(row_width=2)
        btn1 = types.InlineKeyboardButton("‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è", callback_data='cancel_offer')
        btn2 = types.InlineKeyboardButton(f"–û—Ñ–æ—Ä–º–∏—Ç—å ‚úÖ", callback_data='api')
        markup.add(btn1, btn2)
        for chat_id, chat_map in accept_map.items():

            text = f'‚úÖ Link: {chat_id}\n'
            summ = 0
            for product_id, quantity in chat_map.items():

                text += f'üìå –ë—Ä–µ–ª–æ–∫ ‚Ññ{product_id}: {quantity}\n'
                summ += 7 * quantity
            text += f'–¶–µ–Ω–∞ üü∞ {summ} BYN üí≥'

            bot.send_message(message.chat.id, text, reply_markup=markup)

    else:
        send_main_menu(message.chat.id)


@bot.callback_query_handler(func=lambda call: call.data.startswith('button_clicked_'))
def callback_button(call):
    product_id = int(call.data.split('_')[-1])  # –ü–æ–ª—É—á–∞–µ–º ID —Ç–æ–≤–∞—Ä–∞
    bot.send_message(call.message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —Ç–æ–≤–∞—Ä–∞:")

    bot.register_next_step_handler(call.message, save_quantity, product_id)
    print(bucket_map)  # –í—ã–≤–æ–¥–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª—å


def save_quantity(message, product_id):
    try:
        quantity = int(message.text)
        if quantity <= 0:
            bot.send_message(message.chat.id, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            bot.register_next_step_handler(message, save_quantity, product_id)
            return

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏–º–µ–µ—Ç –∫–æ—Ä–∑–∏–Ω—É
        username = message.from_user.username
        user_link = 'https://t.me/'

        if (username == None):
            username = message.chat.id
            user_link = f"https://web.telegram.org/k/#{username}"
        else:
            user_link += username
        if user_link in bucket_map:
            if product_id in bucket_map[user_link]:
                # –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä —É–∂–µ –µ—Å—Ç—å, –ø—Ä–∏–±–∞–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                bucket_map[user_link][product_id] += quantity
            else:
                # –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–∞ –µ—â–µ –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º
                bucket_map[user_link][product_id] = quantity
        else:
            # –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω—ã –µ—â—ë –Ω–µ—Ç, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é
            bucket_map[user_link] = {product_id: quantity}

        bot.send_message(message.chat.id, f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {quantity} —à—Ç. —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É!\n"
                                          f"–í—Å–µ–≥–æ –≤ –∫–æ—Ä–∑–∏–Ω–µ: {bucket_map[user_link][product_id]} —à—Ç –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞.")
        print(bucket_map)  # –í—ã–≤–æ–¥–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã

    except ValueError:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")
        bot.register_next_step_handler(message, save_quantity, product_id)


@bot.callback_query_handler(func=lambda call: call.data == "delete_photo")
def delete_photo(call):

    bot.delete_message(call.message.chat.id, call.message.message_id)

@bot.callback_query_handler(func=lambda call: call.data == "cancel")
def cancel(call):
    username = call.from_user.username
    user_link = 'https://t.me/'

    if (username == None):
        username = call.message.chat.id
        user_link = f"https://web.telegram.org/k/#{username}"
    else:
        user_link += username
    bucket_map.pop(user_link, None)
    accept_map.pop(user_link, None)
    bot.edit_message_text("–ó–∞–∫–∞–∑ –∞–Ω—É–ª–∏—Ä–æ–≤–∞–Ω ‚Åâ",call.message.chat.id, call.message.message_id)
    bot.send_message(call.message.chat.id, '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ ‚õî')
    print(bucket_map)


@bot.callback_query_handler(func=lambda call: call.data == 'accept')
def accept(call):
    bot.edit_message_text("–ó–∞–∫–∞–∑ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ ‚úÖ", call.message.chat.id, call.message.message_id)
    bot.send_message(call.message.chat.id, '–û–∂–∏–¥–∞–π—Ç–µ, –Ω–∞—à —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –≤–∞–º –Ω–∞–ø–∏—à–µ—Ç ‚è≥')
    username = call.from_user.username
    user_link = 'https://t.me/'

    if (username == None):
        username = call.message.chat.id
        user_link = f"https://web.telegram.org/k/#{username}"
    else:
        user_link += username
    accept_map[user_link] = bucket_map[user_link]
    print(accept_map)
    for i in ADMIN:
        text = '‚úÖ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω\nüîó –°—Å—ã–ª–∫–∞: '
        summ = 0
        text += user_link + '\n'
        for product_id,quantity in accept_map[user_link].items():
            text += f'üìå –ë—Ä–µ–ª–æ–∫ ‚Ññ{product_id}: {quantity}\n'
            summ += 7*quantity
        text += f'üí≥ –°—É–º–º–∞: {summ} BYN'
        markup = types.InlineKeyboardMarkup(row_width=2)
        btn1 = types.InlineKeyboardButton("‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è", callback_data='cancel_offer')
        btn2 = types.InlineKeyboardButton(f"–û—Ñ–æ—Ä–º–∏—Ç—å ‚úÖ", callback_data='api')
        markup.add(btn1, btn2)
        bot.send_message(i, text, reply_markup=markup)





@bot.callback_query_handler(func=lambda call: call.data == "cancel_offer")
def cancel_offer(call):
    username = call.from_user.username
    user_link = 'https://t.me/'

    if (username == None):
        username = call.message.chat.id
        user_link = f"https://web.telegram.org/k/#{username}"
    else:
        user_link += username
    bucket_map.pop(user_link, None)
    accept_map.pop(user_link, None)
    bot.delete_message(call.message.chat.id, call.message.message_id)


def send_main_menu(chat_id):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ö–∞—Ç–∞–ª–æ–≥üôà")
    btn2 = types.KeyboardButton("–ö–æ—Ä–∑–∏–Ω–∞üõí")
    markup.add(btn1, btn2)

    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)


bot.polling(none_stop=True)
